<?xml version="1.0" encoding="UTF-8" standalone="no"?><project path="C:\Users\hp\Documents\MQL\S1\Java\p03-Annotations and Reflection"><package id="org"><package id="mql"><package id="java"><package id="actions"><class id="org.mql.java.actions.EditAction"><name>EditAction</name><method type="java.lang.String">copy()</method><method type="java.lang.String">cut()</method><method type="java.lang.String">paste()</method></class><class id="org.mql.java.actions.FileAction"><name>FileAction</name><method type="java.lang.String">exit()</method><method type="java.lang.String">save()</method><method type="java.lang.String">open()</method><method type="java.lang.String">newFile()</method><method type="java.lang.String">saveAs()</method></class></package><package id="annotations"><annotation id="org.mql.java.annotations.Action"><name>Action</name><method type="java.lang.String">name()</method><method type="int">key()</method><method type="java.lang.String">icon()</method></annotation><annotation id="org.mql.java.annotations.Controller"><name>Controller</name><method type="java.lang.String">value()</method></annotation><annotation id="org.mql.java.annotations.Form"><name>Form</name><method type="int">labelSize()</method><method type="java.lang.String">title()</method></annotation><annotation id="org.mql.java.annotations.TextField"><name>TextField</name><method type="int">size()</method><method type="java.lang.String">label()</method></annotation></package><package id="enumerations"/><package id="models"><class id="org.mql.java.models.Author"><name>Author</name><field type="int">id</field><field type="java.lang.String">name</field><field type="int">yearBorn</field><field type="java.lang.String">technology</field><method type="java.lang.String">getName()</method><method type="java.lang.String">toString()</method><method type="void">setName()</method><method type="int">getId()</method><method type="int">getYearBorn()</method><method type="java.lang.String">getTechnology()</method><method type="void">setTechnology()</method><method type="void">setYearBorn()</method><method type="void">setId()</method></class><class id="org.mql.java.models.Document"><name>Document</name><field type="int">id</field><field type="java.lang.String">title</field><field type="int">yearPublished</field><field type="java.lang.String">publisher</field></class></package><package id="reflection"><class id="org.mql.java.reflection.Examples"><name>Examples</name><method type="void">main()</method><method type="void">exp05()</method><method type="void">exp07()</method><method type="void">exp02()</method><method type="void">exp04()</method><method type="void">exp06()</method><method type="void">exp03()</method><method type="void">exp08()</method><method type="void">exp01()</method></class><class id="org.mql.java.reflection.FormGenerator"><name>FormGenerator</name><method type="org.mql.java.ui.Form">generate()</method></class><class id="org.mql.java.reflection.PackageExplorer"><name>PackageExplorer</name><method type="[Ljava.lang.String;">scan()</method><method type="java.util.List">recursiveScan()</method><method type="[Ljava.lang.String;">extractNames()</method><method type="[Ljava.lang.String;">scanClassLoader()</method></class></package><package id="ui"><class id="org.mql.java.ui.Form"><name>Form</name><field type="long">serialVersionUID</field><field type="int">labelSize</field><field type="javax.swing.JPanel">container</field><method type="void">add()</method></class><class id="org.mql.java.ui.LabeledTextField"><name>LabeledTextField</name><field type="javax.swing.JLabel">label</field><field type="javax.swing.JTextField">textField</field><field type="long">serialVersionUID</field><method type="void">setTextField()</method><method type="javax.swing.JTextField">getTextField()</method><method type="void">setLabel()</method><method type="javax.swing.JLabel">getLabel()</method></class><class id="org.mql.java.ui.Menu$ItemListner"><name>ItemListner</name><field type="java.lang.Object">controller</field><field type="java.lang.reflect.Method">method</field><field type="org.mql.java.ui.Menu">this$0</field><method type="void">actionPerformed()</method></class><class id="org.mql.java.ui.Menu"><name>Menu</name><field type="long">serialVersionUID</field><field type="java.lang.String">iconsPath</field><field type="java.lang.String">type</field><method type="void">add()</method><method type="void">add()</method><method type="boolean">lambda$0()</method><method type="int">lambda$1()</method></class></package></package></package></package><package id="java.lang.annotation"><interface id="java.lang.annotation.Annotation"><name>Annotation</name><method type="boolean">equals()</method><method type="java.lang.String">toString()</method><method type="int">hashCode()</method><method type="java.lang.Class">annotationType()</method></interface></package><package id="java.lang"><class id="java.lang.Object"><name>Object</name><method type="void">finalize()</method><method type="void">wait0()</method><method type="boolean">equals()</method><method type="java.lang.String">toString()</method><method type="int">hashCode()</method><method type="java.lang.Class">getClass()</method><method type="java.lang.Object">clone()</method><method type="void">notify()</method><method type="void">notifyAll()</method><method type="void">wait()</method><method type="void">wait()</method><method type="void">wait()</method></class><class id="java.lang.String"><name>String</name><field type="[B">value</field><field type="byte">coder</field><field type="int">hash</field><field type="boolean">hashIsZero</field><field type="long">serialVersionUID</field><field type="boolean">COMPACT_STRINGS</field><field type="[Ljava.io.ObjectStreamField;">serialPersistentFields</field><field type="char">REPL</field><field type="java.util.Comparator">CASE_INSENSITIVE_ORDER</field><field type="byte">LATIN1</field><field type="byte">UTF16</field><method type="[B">value()</method><method type="boolean">equals()</method><method type="int">length()</method><method type="java.lang.String">toString()</method><method type="void">checkIndex()</method><method type="int">hashCode()</method><method type="void">getChars()</method><method type="int">compareTo()</method><method type="int">compareTo()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="byte">coder()</method><method type="java.lang.Void">rangeCheck()</method><method type="int">checkBoundsOffCount()</method><method type="java.nio.charset.Charset">lookupCharset()</method><method type="char">decode2()</method><method type="int">decodeUTF8_UTF16()</method><method type="int">scale()</method><method type="int">decodeWithDecoder()</method><method type="java.lang.String">newStringNoRepl1()</method><method type="java.lang.String">newStringUTF8NoRepl()</method><method type="void">throwMalformed()</method><method type="void">throwMalformed()</method><method type="[B">encodeUTF8()</method><method type="[B">encode8859_1()</method><method type="[B">encode8859_1()</method><method type="[B">encodeASCII()</method><method type="[B">encodeWithEncoder()</method><method type="[B">safeTrim()</method><method type="[B">encode()</method><method type="[B">getBytesNoRepl1()</method><method type="boolean">isASCII()</method><method type="void">throwUnmappable()</method><method type="void">throwUnmappable()</method><method type="void">replaceNegatives()</method><method type="boolean">isNotContinuation()</method><method type="boolean">isMalformed3()</method><method type="int">malformed3()</method><method type="char">decode3()</method><method type="boolean">isMalformed3_2()</method><method type="int">decode4()</method><method type="boolean">isMalformed4()</method><method type="int">malformed4()</method><method type="boolean">isMalformed4_2()</method><method type="boolean">isMalformed4_3()</method><method type="[B">encodeUTF8_UTF16()</method><method type="boolean">isLatin1()</method><method type="char">charAt()</method><method type="int">codePointAt()</method><method type="int">codePointBefore()</method><method type="int">codePointCount()</method><method type="int">offsetByCodePoints()</method><method type="void">checkBoundsBeginEnd()</method><method type="[B">getBytes()</method><method type="void">getBytes()</method><method type="void">getBytes()</method><method type="void">getBytes()</method><method type="[B">getBytes()</method><method type="[B">getBytes()</method><method type="boolean">contentEquals()</method><method type="boolean">contentEquals()</method><method type="boolean">nonSyncContentEquals()</method><method type="boolean">regionMatches()</method><method type="boolean">regionMatches()</method><method type="boolean">startsWith()</method><method type="boolean">startsWith()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="java.lang.String">substring()</method><method type="java.lang.String">substring()</method><method type="boolean">isEmpty()</method><method type="java.lang.String">replace()</method><method type="java.lang.String">replace()</method><method type="boolean">matches()</method><method type="java.lang.String">replaceFirst()</method><method type="java.lang.String">replaceAll()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">splitWithDelimiters()</method><method type="java.lang.String">join()</method><method type="java.lang.String">join()</method><method type="java.lang.String">join()</method><method type="java.lang.String">toLowerCase()</method><method type="java.lang.String">toLowerCase()</method><method type="java.lang.String">toUpperCase()</method><method type="java.lang.String">toUpperCase()</method><method type="java.lang.String">trim()</method><method type="java.lang.String">strip()</method><method type="java.lang.String">stripLeading()</method><method type="java.lang.String">stripTrailing()</method><method type="int">indexOfNonWhitespace()</method><method type="java.util.stream.Stream">lines()</method><method type="java.lang.String">repeat()</method><method type="int">lastIndexOfNonWhitespace()</method><method type="int">outdent()</method><method type="boolean">isBlank()</method><method type="[C">toCharArray()</method><method type="java.lang.String">format()</method><method type="java.lang.String">format()</method><method type="void">repeatCopyRest()</method><method type="java.lang.Object">resolveConstantDesc()</method><method type="java.lang.String">resolveConstantDesc()</method><method type="java.util.stream.IntStream">codePoints()</method><method type="java.lang.String">newStringNoRepl()</method><method type="[B">getBytesUTF8NoRepl()</method><method type="[B">getBytesNoRepl()</method><method type="int">decodeASCII()</method><method type="boolean">equalsIgnoreCase()</method><method type="int">compareToIgnoreCase()</method><method type="boolean">endsWith()</method><method type="java.lang.CharSequence">subSequence()</method><method type="java.lang.String">concat()</method><method type="boolean">contains()</method><method type="java.lang.String">indent()</method><method type="java.lang.String">stripIndent()</method><method type="java.lang.String">translateEscapes()</method><method type="java.util.stream.IntStream">chars()</method><method type="java.lang.Object">transform()</method><method type="java.lang.String">formatted()</method><method type="java.lang.String">copyValueOf()</method><method type="java.lang.String">copyValueOf()</method><method type="java.lang.String">intern()</method><method type="void">checkOffset()</method><method type="java.lang.String">valueOfCodePoint()</method><method type="java.util.Optional">describeConstable()</method><method type="java.lang.String">lambda$stripIndent$3()</method><method type="java.lang.String">lambda$indent$2()</method><method type="java.lang.String">lambda$indent$1()</method><method type="java.lang.String">lambda$indent$0()</method></class></package><package id="java.lang.reflect"><class id="java.lang.reflect.Method"><name>Method</name><method type="java.lang.Object">invoke()</method><method type="java.lang.Object">invoke()</method><method type="java.lang.String">getName()</method><method type="boolean">equals()</method><method type="java.lang.String">toString()</method><method type="int">hashCode()</method><method type="int">getModifiers()</method><method type="[Ljava.lang.reflect.TypeVariable;">getTypeParameters()</method><method type="sun.reflect.generics.repository.ConstructorRepository">getGenericInfo()</method><method type="sun.reflect.generics.repository.MethodRepository">getGenericInfo()</method><method type="sun.reflect.generics.factory.GenericsFactory">getFactory()</method><method type="java.lang.Class">getReturnType()</method><method type="[Ljava.lang.Class;">getParameterTypes()</method><method type="boolean">isSynthetic()</method><method type="java.lang.String">toGenericString()</method><method type="java.lang.Class">getDeclaringClass()</method><method type="java.lang.annotation.Annotation">getAnnotation()</method><method type="[Ljava.lang.annotation.Annotation;">getDeclaredAnnotations()</method><method type="void">setAccessible()</method><method type="void">checkCanSetAccessible()</method><method type="java.lang.String">toShortString()</method><method type="java.lang.reflect.AccessibleObject">getRoot()</method><method type="java.lang.reflect.Method">getRoot()</method><method type="java.lang.String">getGenericSignature()</method><method type="java.lang.reflect.Method">copy()</method><method type="boolean">isVarArgs()</method><method type="[Ljava.lang.Class;">getSharedParameterTypes()</method><method type="int">getParameterCount()</method><method type="[[Ljava.lang.annotation.Annotation;">getParameterAnnotations()</method><method type="[Ljava.lang.reflect.Type;">getGenericParameterTypes()</method><method type="[Ljava.lang.reflect.Type;">getGenericExceptionTypes()</method><method type="boolean">isDefault()</method><method type="java.lang.String">toShortSignature()</method><method type="java.lang.reflect.Type">getGenericReturnType()</method><method type="boolean">isCallerSensitive()</method><method type="jdk.internal.reflect.MethodAccessor">acquireMethodAccessor()</method><method type="jdk.internal.reflect.MethodAccessor">getMethodAccessor()</method><method type="void">setMethodAccessor()</method><method type="java.lang.reflect.Method">leafCopy()</method><method type="boolean">hasGenericInformation()</method><method type="[B">getAnnotationBytes()</method><method type="[Ljava.lang.Class;">getSharedExceptionTypes()</method><method type="[Ljava.lang.Class;">getExceptionTypes()</method><method type="void">specificToStringHeader()</method><method type="void">specificToGenericStringHeader()</method><method type="boolean">isBridge()</method><method type="java.lang.Object">getDefaultValue()</method><method type="java.lang.reflect.AnnotatedType">getAnnotatedReturnType()</method><method type="boolean">handleParameterNumberMismatch()</method></class></package><package id="org.mql.java.ui"><class id="org.mql.java.ui.Menu"><name>Menu</name><field type="long">serialVersionUID</field><field type="java.lang.String">iconsPath</field><field type="java.lang.String">type</field><method type="void">add()</method><method type="void">add()</method><method type="boolean">lambda$0()</method><method type="int">lambda$1()</method></class></package><package id="java.awt.event"><interface id="java.awt.event.ActionListener"><name>ActionListener</name><method type="void">actionPerformed()</method></interface></package><package id="javax.swing"><class id="javax.swing.JPanel"><name>JPanel</name><field type="java.lang.String">uiClassID</field><method type="void">writeObject()</method><method type="java.lang.String">paramString()</method><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="void">updateUI()</method><method type="javax.swing.plaf.PanelUI">getUI()</method><method type="javax.swing.plaf.ComponentUI">getUI()</method><method type="void">setUI()</method><method type="java.lang.String">getUIClassID()</method></class><class id="javax.swing.JLabel"><name>JLabel</name><field type="java.lang.String">uiClassID</field><field type="int">mnemonic</field><field type="int">mnemonicIndex</field><field type="java.lang.String">text</field><field type="javax.swing.Icon">defaultIcon</field><field type="javax.swing.Icon">disabledIcon</field><field type="boolean">disabledIconSet</field><field type="int">verticalAlignment</field><field type="int">horizontalAlignment</field><field type="int">verticalTextPosition</field><field type="int">horizontalTextPosition</field><field type="int">iconTextGap</field><field type="java.awt.Component">labelFor</field><field type="java.lang.String">LABELED_BY_PROPERTY</field><method type="void">writeObject()</method><method type="java.lang.String">paramString()</method><method type="java.lang.String">getText()</method><method type="void">setText()</method><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="boolean">imageUpdate()</method><method type="void">updateUI()</method><method type="javax.swing.plaf.LabelUI">getUI()</method><method type="javax.swing.plaf.ComponentUI">getUI()</method><method type="void">setUI()</method><method type="java.lang.String">getUIClassID()</method><method type="javax.accessibility.AccessibleContext">access$000()</method><method type="void">setIcon()</method><method type="void">setHorizontalAlignment()</method><method type="void">setDisabledIcon()</method><method type="int">getDisplayedMnemonic()</method><method type="void">setDisplayedMnemonicIndex()</method><method type="javax.swing.Icon">getDisabledIcon()</method><method type="void">setDisplayedMnemonic()</method><method type="void">setDisplayedMnemonic()</method><method type="int">checkVerticalKey()</method><method type="int">checkHorizontalKey()</method><method type="javax.swing.Icon">getIcon()</method><method type="int">getDisplayedMnemonicIndex()</method><method type="int">getIconTextGap()</method><method type="void">setIconTextGap()</method><method type="int">getVerticalAlignment()</method><method type="void">setVerticalAlignment()</method><method type="int">getHorizontalAlignment()</method><method type="int">getVerticalTextPosition()</method><method type="void">setVerticalTextPosition()</method><method type="int">getHorizontalTextPosition()</method><method type="void">setHorizontalTextPosition()</method><method type="java.awt.Component">getLabelFor()</method><method type="void">setLabelFor()</method></class><class id="javax.swing.JTextField"><name>JTextField</name><field type="javax.swing.Action">action</field><field type="java.beans.PropertyChangeListener">actionPropertyChangeListener</field><field type="java.lang.String">notifyAction</field><field type="javax.swing.BoundedRangeModel">visibility</field><field type="int">horizontalAlignment</field><field type="int">columns</field><field type="int">columnWidth</field><field type="java.lang.String">command</field><field type="[Ljavax.swing.Action;">defaultActions</field><field type="java.lang.String">uiClassID</field><method type="void">writeObject()</method><method type="[Ljavax.swing.Action;">getActions()</method><method type="java.lang.String">paramString()</method><method type="boolean">isValidateRoot()</method><method type="void">setFont()</method><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="java.awt.Dimension">getPreferredSize()</method><method type="java.lang.String">getUIClassID()</method><method type="void">scrollRectToVisible()</method><method type="void">setHorizontalAlignment()</method><method type="int">getHorizontalAlignment()</method><method type="javax.swing.text.Document">createDefaultModel()</method><method type="void">setDocument()</method><method type="int">getColumnWidth()</method><method type="javax.swing.Action">getAction()</method><method type="void">setAction()</method><method type="void">removeActionListener()</method><method type="void">configurePropertiesFromAction()</method><method type="boolean">isListener()</method><method type="java.beans.PropertyChangeListener">createActionPropertyChangeListener()</method><method type="void">setActionCommandFromAction()</method><method type="void">setActionCommand()</method><method type="void">fireActionPerformed()</method><method type="int">getColumns()</method><method type="void">setColumns()</method><method type="[Ljava.awt.event.ActionListener;">getActionListeners()</method><method type="void">actionPropertyChanged()</method><method type="void">postActionEvent()</method><method type="javax.swing.BoundedRangeModel">getHorizontalVisibility()</method><method type="int">getScrollOffset()</method><method type="void">setScrollOffset()</method><method type="boolean">hasActionListener()</method><method type="void">addActionListener()</method></class><class id="javax.swing.JMenuBar"><name>JMenuBar</name><field type="java.lang.String">uiClassID</field><field type="javax.swing.SingleSelectionModel">selectionModel</field><field type="boolean">paintBorder</field><field type="java.awt.Insets">margin</field><field type="boolean">TRACE</field><field type="boolean">VERBOSE</field><field type="boolean">DEBUG</field><method type="javax.swing.JMenu">add()</method><method type="void">readObject()</method><method type="void">writeObject()</method><method type="java.lang.String">paramString()</method><method type="void">removeNotify()</method><method type="java.awt.Component">getComponent()</method><method type="void">addNotify()</method><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="void">processKeyEvent()</method><method type="void">processMouseEvent()</method><method type="void">updateUI()</method><method type="javax.swing.plaf.ComponentUI">getUI()</method><method type="javax.swing.plaf.MenuBarUI">getUI()</method><method type="void">setUI()</method><method type="java.lang.String">getUIClassID()</method><method type="void">paintBorder()</method><method type="boolean">processKeyBinding()</method><method type="void">setSelectionModel()</method><method type="java.awt.Component">getComponentAtIndex()</method><method type="javax.swing.SingleSelectionModel">getSelectionModel()</method><method type="int">getComponentIndex()</method><method type="boolean">isSelected()</method><method type="boolean">isBorderPainted()</method><method type="[Ljavax.swing.MenuElement;">getSubElements()</method><method type="boolean">processBindingForKeyStrokeRecursive()</method><method type="javax.swing.JMenu">getMenu()</method><method type="int">getMenuCount()</method><method type="void">setHelpMenu()</method><method type="javax.swing.JMenu">getHelpMenu()</method><method type="void">setSelected()</method><method type="void">setBorderPainted()</method><method type="void">setMargin()</method><method type="java.awt.Insets">getMargin()</method><method type="void">menuSelectionChanged()</method></class></package><association type="extends"><start>org.mql.java.actions.EditAction</start><end>java.lang.Object</end></association><association type="extends"><start>org.mql.java.actions.FileAction</start><end>java.lang.Object</end></association><association type="implements"><start>org.mql.java.annotations.Action</start><end>java.lang.annotation.Annotation</end></association><association type="implements"><start>org.mql.java.annotations.Controller</start><end>java.lang.annotation.Annotation</end></association><association type="implements"><start>org.mql.java.annotations.Form</start><end>java.lang.annotation.Annotation</end></association><association type="implements"><start>org.mql.java.annotations.TextField</start><end>java.lang.annotation.Annotation</end></association><association type="extends"><start>org.mql.java.models.Author</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.models.Author</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Author</start><end>java.lang.String</end></association><association type="extends"><start>org.mql.java.models.Document</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.models.Document</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Document</start><end>java.lang.String</end></association><association type="extends"><start>org.mql.java.reflection.Examples</start><end>java.lang.Object</end></association><association type="extends"><start>org.mql.java.reflection.FormGenerator</start><end>java.lang.Object</end></association><association type="extends"><start>org.mql.java.reflection.PackageExplorer</start><end>java.lang.Object</end></association><association type="extends"><start>org.mql.java.ui.Form</start><end>javax.swing.JPanel</end></association><association type="aggregation"><start>org.mql.java.ui.Form</start><end>javax.swing.JPanel</end></association><association type="extends"><start>org.mql.java.ui.LabeledTextField</start><end>javax.swing.JPanel</end></association><association type="aggregation"><start>org.mql.java.ui.LabeledTextField</start><end>javax.swing.JLabel</end></association><association type="aggregation"><start>org.mql.java.ui.LabeledTextField</start><end>javax.swing.JTextField</end></association><association type="extends"><start>org.mql.java.ui.Menu$ItemListner</start><end>java.lang.Object</end></association><association type="implements"><start>org.mql.java.ui.Menu$ItemListner</start><end>java.awt.event.ActionListener</end></association><association type="aggregation"><start>org.mql.java.ui.Menu$ItemListner</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.ui.Menu$ItemListner</start><end>java.lang.reflect.Method</end></association><association type="aggregation"><start>org.mql.java.ui.Menu$ItemListner</start><end>org.mql.java.ui.Menu</end></association><association type="extends"><start>org.mql.java.ui.Menu</start><end>javax.swing.JMenuBar</end></association><association type="aggregation"><start>org.mql.java.ui.Menu</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.ui.Menu</start><end>java.lang.String</end></association></project>
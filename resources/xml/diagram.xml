<?xml version="1.0" encoding="UTF-8" standalone="no"?><project path="C:\Users\hp\Documents\MQL\S1\Java\ElGhayate Marouane - UML Diagrams Generator"><package id="org"><package id="mql"><package id="java"><package id="models"><class id="org.mql.java.models.Association" scope="0"><name>Association</name><field type="java.lang.String">type</field><field type="java.lang.String">start</field><field type="java.lang.String">end</field><method type="void">setType()</method><method type="java.lang.String">getType()</method><method type="void">setStart()</method><method type="java.lang.String">getEnd()</method><method type="java.lang.String">getStart()</method><method type="void">setEnd()</method></class><interface id="org.mql.java.models.Container" scope="0"><name>Container</name><method type="void">addPackage()</method></interface><class id="org.mql.java.models.Entity" scope="0"><name>Entity</name><field type="java.lang.Class">cls</field><field type="java.lang.String">name</field><field type="java.lang.String">fullName</field><field type="java.lang.String">packageName</field><field type="org.mql.java.models.Entity">superClass</field><field type="java.util.List">interfaces</field><field type="java.util.List">componants</field><field type="java.util.List">aggregates</field><field type="int">INTERNAL</field><field type="int">EXTERNAL</field><field type="int">scope</field><field type="java.lang.String">type</field><method type="java.util.List">getAggregates()</method><method type="java.util.List">getComponants()</method><method type="org.mql.java.models.Entity">getSuperClass()</method><method type="java.lang.String">getName()</method><method type="java.lang.String">toString()</method><method type="java.util.List">getInterfaces()</method><method type="java.lang.String">getPackageName()</method><method type="[Ljava.lang.reflect.Field;">getFields()</method><method type="[Ljava.lang.reflect.Method;">getMethods()</method><method type="java.lang.String">getType()</method><method type="int">getScope()</method><method type="java.lang.String">getFullName()</method><method type="boolean">lambda$2()</method><method type="org.mql.java.models.Entity">lambda$1()</method><method type="org.mql.java.models.Entity">lambda$3()</method><method type="org.mql.java.models.Entity">lambda$0()</method><method type="void">discover()</method></class><class id="org.mql.java.models.Package" scope="0"><name>Package</name><field type="java.lang.String">name</field><field type="java.util.List">classes</field><field type="java.util.List">subPackages</field><method type="java.util.List">getSubPackages()</method><method type="void">addPackage()</method><method type="java.lang.String">getName()</method><method type="java.util.List">getClasses()</method><method type="void">addClass()</method><method type="void">setName()</method><method type="void">print()</method></class><class id="org.mql.java.models.Project" scope="0"><name>Project</name><field type="java.lang.String">projectPath</field><field type="java.util.List">packages</field><field type="java.util.List">associations</field><method type="java.util.List">getAssociations()</method><method type="java.lang.String">getProjectPath()</method><method type="void">addAssociation()</method><method type="void">addPackage()</method><method type="java.lang.String">toString()</method><method type="java.util.List">getPackages()</method><method type="void">print()</method></class></package><package id="parser"><class id="org.mql.java.parser.XMLNode" scope="0"><name>XMLNode</name><field type="org.w3c.dom.Node">node</field><field type="[Lorg.mql.java.parser.XMLNode;">children</field><field type="java.lang.String">source</field><field type="org.w3c.dom.Document">document</field><field type="org.mql.java.parser.XMLNode">instance</field><method type="void">setSource()</method><method type="int">getIntAttribute()</method><method type="void">removeChild()</method><method type="void">appendChild()</method><method type="org.mql.java.parser.XMLNode">querySelector()</method><method type="void">extractChildren()</method><method type="org.mql.java.parser.XMLNode">newDefaultInstance()</method><method type="void">setDocumentElement()</method><method type="java.lang.String">getName()</method><method type="java.lang.String">getValue()</method><method type="boolean">isNamed()</method><method type="void">save()</method><method type="void">setValue()</method><method type="org.w3c.dom.Node">getNode()</method><method type="void">setAttribute()</method><method type="java.lang.String">getAttribute()</method><method type="void">setNode()</method><method type="org.mql.java.parser.XMLNode">getChild()</method><method type="[Lorg.mql.java.parser.XMLNode;">getChildren()</method><method type="org.mql.java.parser.XMLNode">createNode()</method><method type="[Lorg.mql.java.parser.XMLNode;">getNodes()</method></class></package><package id="persistance"><class id="org.mql.java.persistance.ProjectLoader" scope="0"><name>ProjectLoader</name><field type="org.mql.java.models.Project">project</field><field type="org.mql.java.parser.XMLNode">root</field><method type="void">loadPackages()</method><method type="org.mql.java.models.Entity">getClassWrapper()</method><method type="void">loadAssociations()</method><method type="org.mql.java.models.Project">load()</method></class><class id="org.mql.java.persistance.ProjectWriter" scope="0"><name>ProjectWriter</name><field type="org.mql.java.parser.XMLNode">root</field><method type="void">appendPackage()</method><method type="org.mql.java.parser.XMLNode">getAssociationNode()</method><method type="void">appendClass()</method><method type="void">addExternalClass()</method><method type="void">write()</method></class></package><package id="scanner"><class id="org.mql.java.scanner.ProjectScanner" scope="0"><name>ProjectScanner</name><field type="java.lang.String">root</field><field type="org.mql.java.models.Project">project</field><method type="org.mql.java.models.Package">scanPackage()</method><method type="org.mql.java.models.Entity">getClassWrapper()</method><method type="org.mql.java.models.Project">scan()</method><method type="void">extractAssociations()</method></class></package><package id="ui"><package id="componants"><class id="org.mql.java.ui.componants.ClassComponant" scope="0"><name>ClassComponant</name><field type="long">serialVersionUID</field><field type="org.mql.java.models.Entity">wrapper</field><method type="void">addInternalClass()</method><method type="void">addExternalClass()</method><method type="java.lang.String">getModifier()</method></class><class id="org.mql.java.ui.componants.LabeledTextField" scope="0"><name>LabeledTextField</name><field type="long">serialVersionUID</field><field type="javax.swing.JLabel">label</field><field type="javax.swing.JTextField">textField</field><field type="javax.swing.JPanel">container</field><method type="javax.swing.JLabel">getLabel()</method><method type="javax.swing.JTextField">getTextField()</method><method type="javax.swing.JPanel">getContainerPanel()</method><method type="void">setLabel()</method></class><class id="org.mql.java.ui.componants.PackageComponant" scope="0"><name>PackageComponant</name></class></package><package id="dialogs"><class id="org.mql.java.ui.dialogs.DiagramsDialog" scope="0"><name>DiagramsDialog</name><field type="long">serialVersionUID</field></class><class id="org.mql.java.ui.dialogs.ErrorDialog" scope="0"><name>ErrorDialog</name><field type="long">serialVersionUID</field></class></package><package id="panels"><class id="org.mql.java.ui.panels.ClassPanel" scope="0"><name>ClassPanel</name><field type="long">serialVersionUID</field><method type="void">addComponants()</method></class><class id="org.mql.java.ui.panels.DiagramsPanel" scope="0"><name>DiagramsPanel</name><field type="long">serialVersionUID</field><method type="java.awt.Dimension">getPreferredSize()</method></class><class id="org.mql.java.ui.panels.FormPanel$DirectoryFilter" scope="0"><name>DirectoryFilter</name><field type="org.mql.java.ui.panels.FormPanel">this$0</field><method type="java.lang.String">getDescription()</method><method type="boolean">accept()</method></class><class id="org.mql.java.ui.panels.FormPanel" scope="0"><name>FormPanel</name><field type="long">serialVersionUID</field><field type="javax.swing.JButton">generate</field><field type="javax.swing.JButton">choose</field><field type="javax.swing.JLabel">label</field><field type="org.mql.java.ui.componants.LabeledTextField">labeledTextField</field><method type="void">actionPerformed()</method><method type="org.mql.java.models.Project">getProject()</method></class><class id="org.mql.java.ui.panels.PackagePanel" scope="0"><name>PackagePanel</name><field type="long">serialVersionUID</field></class></package></package><package id="util"><class id="org.mql.java.util.SourceClassLoader" scope="0"><name>SourceClassLoader</name><method type="java.lang.Class">loadClass()</method></class></package><class id="org.mql.java.Main" scope="0"><name>Main</name><field type="long">serialVersionUID</field><method type="void">main()</method><method type="void">init()</method><method type="void">m1()</method></class></package></package></package><package id="java.lang"><class id="java.lang.Object" scope="1"><name>Object</name><method type="void">finalize()</method><method type="void">wait0()</method><method type="boolean">equals()</method><method type="java.lang.String">toString()</method><method type="int">hashCode()</method><method type="java.lang.Class">getClass()</method><method type="java.lang.Object">clone()</method><method type="void">notify()</method><method type="void">notifyAll()</method><method type="void">wait()</method><method type="void">wait()</method><method type="void">wait()</method></class><class id="java.lang.String" scope="1"><name>String</name><field type="[B">value</field><field type="byte">coder</field><field type="int">hash</field><field type="boolean">hashIsZero</field><field type="long">serialVersionUID</field><field type="boolean">COMPACT_STRINGS</field><field type="[Ljava.io.ObjectStreamField;">serialPersistentFields</field><field type="char">REPL</field><field type="java.util.Comparator">CASE_INSENSITIVE_ORDER</field><field type="byte">LATIN1</field><field type="byte">UTF16</field><method type="[B">value()</method><method type="boolean">equals()</method><method type="int">length()</method><method type="java.lang.String">toString()</method><method type="void">checkIndex()</method><method type="int">hashCode()</method><method type="void">getChars()</method><method type="int">compareTo()</method><method type="int">compareTo()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="byte">coder()</method><method type="java.lang.Void">rangeCheck()</method><method type="int">checkBoundsOffCount()</method><method type="java.nio.charset.Charset">lookupCharset()</method><method type="char">decode2()</method><method type="int">decodeUTF8_UTF16()</method><method type="int">scale()</method><method type="int">decodeWithDecoder()</method><method type="java.lang.String">newStringNoRepl1()</method><method type="java.lang.String">newStringUTF8NoRepl()</method><method type="void">throwMalformed()</method><method type="void">throwMalformed()</method><method type="[B">encodeUTF8()</method><method type="[B">encode8859_1()</method><method type="[B">encode8859_1()</method><method type="[B">encodeASCII()</method><method type="[B">encodeWithEncoder()</method><method type="[B">safeTrim()</method><method type="[B">encode()</method><method type="[B">getBytesNoRepl1()</method><method type="boolean">isASCII()</method><method type="void">throwUnmappable()</method><method type="void">throwUnmappable()</method><method type="void">replaceNegatives()</method><method type="boolean">isNotContinuation()</method><method type="boolean">isMalformed3()</method><method type="int">malformed3()</method><method type="char">decode3()</method><method type="boolean">isMalformed3_2()</method><method type="int">decode4()</method><method type="boolean">isMalformed4()</method><method type="int">malformed4()</method><method type="boolean">isMalformed4_2()</method><method type="boolean">isMalformed4_3()</method><method type="[B">encodeUTF8_UTF16()</method><method type="boolean">isLatin1()</method><method type="char">charAt()</method><method type="int">codePointAt()</method><method type="int">codePointBefore()</method><method type="int">codePointCount()</method><method type="int">offsetByCodePoints()</method><method type="void">checkBoundsBeginEnd()</method><method type="[B">getBytes()</method><method type="void">getBytes()</method><method type="void">getBytes()</method><method type="void">getBytes()</method><method type="[B">getBytes()</method><method type="[B">getBytes()</method><method type="boolean">contentEquals()</method><method type="boolean">contentEquals()</method><method type="boolean">nonSyncContentEquals()</method><method type="boolean">regionMatches()</method><method type="boolean">regionMatches()</method><method type="boolean">startsWith()</method><method type="boolean">startsWith()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="java.lang.String">substring()</method><method type="java.lang.String">substring()</method><method type="boolean">isEmpty()</method><method type="java.lang.String">replace()</method><method type="java.lang.String">replace()</method><method type="boolean">matches()</method><method type="java.lang.String">replaceFirst()</method><method type="java.lang.String">replaceAll()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">splitWithDelimiters()</method><method type="java.lang.String">join()</method><method type="java.lang.String">join()</method><method type="java.lang.String">join()</method><method type="java.lang.String">toLowerCase()</method><method type="java.lang.String">toLowerCase()</method><method type="java.lang.String">toUpperCase()</method><method type="java.lang.String">toUpperCase()</method><method type="java.lang.String">trim()</method><method type="java.lang.String">strip()</method><method type="java.lang.String">stripLeading()</method><method type="java.lang.String">stripTrailing()</method><method type="int">indexOfNonWhitespace()</method><method type="java.util.stream.Stream">lines()</method><method type="java.lang.String">repeat()</method><method type="int">lastIndexOfNonWhitespace()</method><method type="int">outdent()</method><method type="boolean">isBlank()</method><method type="[C">toCharArray()</method><method type="java.lang.String">format()</method><method type="java.lang.String">format()</method><method type="void">repeatCopyRest()</method><method type="java.lang.Object">resolveConstantDesc()</method><method type="java.lang.String">resolveConstantDesc()</method><method type="java.util.stream.IntStream">codePoints()</method><method type="java.lang.String">newStringNoRepl()</method><method type="[B">getBytesUTF8NoRepl()</method><method type="[B">getBytesNoRepl()</method><method type="int">decodeASCII()</method><method type="boolean">equalsIgnoreCase()</method><method type="int">compareToIgnoreCase()</method><method type="boolean">endsWith()</method><method type="java.lang.CharSequence">subSequence()</method><method type="java.lang.String">concat()</method><method type="boolean">contains()</method><method type="java.lang.String">indent()</method><method type="java.lang.String">stripIndent()</method><method type="java.lang.String">translateEscapes()</method><method type="java.util.stream.IntStream">chars()</method><method type="java.lang.Object">transform()</method><method type="java.lang.String">formatted()</method><method type="java.lang.String">copyValueOf()</method><method type="java.lang.String">copyValueOf()</method><method type="java.lang.String">intern()</method><method type="void">checkOffset()</method><method type="java.lang.String">valueOfCodePoint()</method><method type="java.util.Optional">describeConstable()</method><method type="java.lang.String">lambda$stripIndent$3()</method><method type="java.lang.String">lambda$indent$2()</method><method type="java.lang.String">lambda$indent$1()</method><method type="java.lang.String">lambda$indent$0()</method></class><class id="java.lang.Class" scope="1"><name>Class</name><field type="int">ANNOTATION</field><field type="int">ENUM</field><field type="int">SYNTHETIC</field><field type="java.lang.reflect.Constructor">cachedConstructor</field><field type="java.lang.String">name</field><field type="java.lang.Module">module</field><field type="java.lang.String">packageName</field><field type="java.lang.Class">componentType</field><field type="java.security.ProtectionDomain">allPermDomain</field><field type="java.lang.ref.SoftReference">reflectionData</field><field type="int">classRedefinedCount</field><field type="sun.reflect.generics.repository.ClassRepository">genericInfo</field><field type="[Ljava.lang.Class;">EMPTY_CLASS_ARRAY</field><field type="long">serialVersionUID</field><field type="[Ljava.io.ObjectStreamField;">serialPersistentFields</field><field type="jdk.internal.reflect.ReflectionFactory">reflectionFactory</field><field type="[Ljava.lang.Object;">enumConstants</field><field type="java.util.Map">enumConstantDirectory</field><field type="java.lang.Class$AnnotationData">annotationData</field><field type="sun.reflect.annotation.AnnotationType">annotationType</field><field type="java.lang.ClassValue$ClassValueMap">classValueMap</field><method type="java.lang.String">getName()</method><method type="void">checkPackageAccess()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName0()</method><method type="java.lang.String">toString()</method><method type="java.lang.Module">getModule()</method><method type="java.security.ProtectionDomain">getProtectionDomain()</method><method type="boolean">isAssignableFrom()</method><method type="boolean">isInstance()</method><method type="int">getModifiers()</method><method type="boolean">isInterface()</method><method type="boolean">isArray()</method><method type="boolean">isPrimitive()</method><method type="boolean">isHidden()</method><method type="java.lang.Class">getSuperclass()</method><method type="java.lang.Object">cast()</method><method type="java.lang.invoke.TypeDescriptor$OfField">componentType()</method><method type="java.lang.Class">componentType()</method><method type="java.lang.ClassLoader">getClassLoader0()</method><method type="java.util.Optional">describeConstable()</method><method type="java.lang.Class">getComponentType()</method><method type="boolean">isAnnotation()</method><method type="boolean">isEnum()</method><method type="boolean">isRecord()</method><method type="[Ljava.lang.reflect.TypeVariable;">getTypeParameters()</method><method type="java.lang.ClassLoader">getClassLoader()</method><method type="void">checkMemberAccess()</method><method type="jdk.internal.reflect.ReflectionFactory">getReflectionFactory()</method><method type="java.lang.reflect.Constructor">getConstructor0()</method><method type="java.lang.Object">newInstance()</method><method type="java.lang.String">initClassName()</method><method type="sun.reflect.generics.repository.ClassRepository">getGenericInfo()</method><method type="java.lang.Class">elementType()</method><method type="[Ljava.lang.Class;">getInterfaces()</method><method type="[Ljava.lang.Class;">getInterfaces()</method><method type="java.lang.Class$ReflectionData">reflectionData()</method><method type="[Ljava.lang.Class;">getInterfaces0()</method><method type="boolean">isMemberClass()</method><method type="boolean">isLocalClass()</method><method type="boolean">isAnonymousClass()</method><method type="int">getClassAccessFlagsRaw()</method><method type="java.lang.Class$EnclosingMethodInfo">getEnclosingMethodInfo()</method><method type="sun.reflect.generics.factory.GenericsFactory">getFactory()</method><method type="java.lang.Class">toClass()</method><method type="java.lang.Class">getEnclosingClass()</method><method type="[Ljava.lang.reflect.Method;">privateGetDeclaredMethods()</method><method type="boolean">arrayContentsEq()</method><method type="[Ljava.lang.Object;">getEnclosingMethod0()</method><method type="[Ljava.lang.reflect.Constructor;">privateGetDeclaredConstructors()</method><method type="java.lang.Class">getDeclaringClass0()</method><method type="boolean">isUnnamedClass()</method><method type="java.lang.String">getSimpleName0()</method><method type="java.lang.String">getSimpleName()</method><method type="java.lang.String">getSimpleBinaryName()</method><method type="java.lang.String">getCanonicalName0()</method><method type="java.lang.String">getCanonicalName()</method><method type="boolean">isLocalOrAnonymousClass()</method><method type="boolean">isSynthetic()</method><method type="boolean">isTopLevelClass()</method><method type="java.lang.String">getSimpleBinaryName0()</method><method type="boolean">hasEnclosingMethodInfo()</method><method type="[Ljava.lang.reflect.Field;">privateGetPublicFields()</method><method type="[Ljava.lang.reflect.Field;">copyFields()</method><method type="[Ljava.lang.reflect.Method;">privateGetPublicMethods()</method><method type="[Ljava.lang.reflect.Method;">copyMethods()</method><method type="[Ljava.lang.reflect.Constructor;">copyConstructors()</method><method type="java.lang.reflect.Field">getField0()</method><method type="java.lang.reflect.Method">getMethod0()</method><method type="java.lang.String">methodToString()</method><method type="[Ljava.lang.Class;">getDeclaredClasses0()</method><method type="[Ljava.lang.reflect.Field;">privateGetDeclaredFields()</method><method type="[Ljava.lang.reflect.RecordComponent;">getRecordComponents0()</method><method type="java.lang.reflect.Field">searchFields()</method><method type="java.lang.reflect.Method">searchMethods()</method><method type="java.lang.String">resolveName()</method><method type="boolean">isOpenToCaller()</method><method type="java.io.InputStream">getResourceAsStream()</method><method type="java.net.URL">getResource()</method><method type="java.security.ProtectionDomain">protectionDomain()</method><method type="java.security.ProtectionDomain">getProtectionDomain0()</method><method type="java.lang.String">getPackageName()</method><method type="java.lang.Class$ReflectionData">newReflectionData()</method><method type="java.lang.String">getGenericSignature0()</method><method type="[B">getExecutableTypeAnnotationBytes()</method><method type="[Ljava.lang.reflect.Field;">getDeclaredFields0()</method><method type="void">addAll()</method><method type="[Ljava.lang.reflect.Constructor;">getDeclaredConstructors0()</method><method type="[Ljava.lang.reflect.Method;">getDeclaredMethods0()</method><method type="java.lang.PublicMethods$MethodList">getMethodsRecursive()</method><method type="boolean">desiredAssertionStatus0()</method><method type="boolean">desiredAssertionStatus()</method><method type="boolean">isRecord0()</method><method type="[Ljava.lang.Object;">getEnumConstantsShared()</method><method type="java.lang.reflect.Method">getMethod()</method><method type="java.util.Map">enumConstantDirectory()</method><method type="java.lang.String">cannotCastMsg()</method><method type="java.lang.Class$AnnotationData">annotationData()</method><method type="boolean">isAnnotationPresent()</method><method type="java.lang.Class$AnnotationData">createAnnotationData()</method><method type="[B">getRawAnnotations()</method><method type="jdk.internal.reflect.ConstantPool">getConstantPool()</method><method type="boolean">casAnnotationType()</method><method type="[B">getRawTypeAnnotations()</method><method type="java.lang.Class">getNestHost0()</method><method type="java.lang.Class">getNestHost()</method><method type="[Ljava.lang.Class;">getNestMembers0()</method><method type="java.lang.String">descriptorString()</method><method type="[Ljava.lang.Class;">getPermittedSubclasses0()</method><method type="void">checkPackageAccessForPermittedSubclasses()</method><method type="[Ljava.lang.Class;">getPermittedSubclasses()</method><method type="int">getClassFileVersion0()</method><method type="int">getClassAccessFlagsRaw0()</method><method type="java.lang.Class">arrayType()</method><method type="java.lang.invoke.TypeDescriptor$OfField">arrayType()</method><method type="boolean">isDirectSubType()</method><method type="void">registerNatives()</method><method type="java.lang.String">toGenericString()</method><method type="java.lang.String">typeVarBounds()</method><method type="java.lang.Object">getClassData()</method><method type="java.lang.reflect.Type">getGenericSuperclass()</method><method type="java.lang.Package">getPackage()</method><method type="[Ljava.lang.reflect.Type;">getGenericInterfaces()</method><method type="java.util.Set">accessFlags()</method><method type="[Ljava.lang.Object;">getSigners()</method><method type="void">setSigners()</method><method type="java.lang.reflect.Method">getEnclosingMethod()</method><method type="java.lang.reflect.Constructor">getEnclosingConstructor()</method><method type="java.lang.Class">getDeclaringClass()</method><method type="java.lang.String">getTypeName()</method><method type="[Ljava.lang.Class;">getClasses()</method><method type="[Ljava.lang.reflect.Field;">getFields()</method><method type="[Ljava.lang.reflect.Method;">getMethods()</method><method type="[Ljava.lang.reflect.Constructor;">getConstructors()</method><method type="java.lang.reflect.Field">getField()</method><method type="java.lang.reflect.Constructor">getConstructor()</method><method type="[Ljava.lang.Class;">getDeclaredClasses()</method><method type="[Ljava.lang.reflect.Field;">getDeclaredFields()</method><method type="[Ljava.lang.reflect.RecordComponent;">getRecordComponents()</method><method type="[Ljava.lang.reflect.Method;">getDeclaredMethods()</method><method type="[Ljava.lang.reflect.Constructor;">getDeclaredConstructors()</method><method type="java.lang.reflect.Field">getDeclaredField()</method><method type="java.lang.reflect.Method">getDeclaredMethod()</method><method type="java.util.List">getDeclaredPublicMethods()</method><method type="java.lang.reflect.Constructor">getDeclaredConstructor()</method><method type="java.lang.Class">getPrimitiveClass()</method><method type="[Ljava.lang.Object;">getEnumConstants()</method><method type="java.lang.Class">asSubclass()</method><method type="java.lang.annotation.Annotation">getAnnotation()</method><method type="[Ljava.lang.annotation.Annotation;">getAnnotationsByType()</method><method type="[Ljava.lang.annotation.Annotation;">getAnnotations()</method><method type="java.lang.annotation.Annotation">getDeclaredAnnotation()</method><method type="[Ljava.lang.annotation.Annotation;">getDeclaredAnnotationsByType()</method><method type="[Ljava.lang.annotation.Annotation;">getDeclaredAnnotations()</method><method type="sun.reflect.annotation.AnnotationType">getAnnotationType()</method><method type="java.util.Map">getDeclaredAnnotationMap()</method><method type="java.lang.reflect.AnnotatedType">getAnnotatedSuperclass()</method><method type="[Ljava.lang.reflect.AnnotatedType;">getAnnotatedInterfaces()</method><method type="boolean">isNestmateOf()</method><method type="[Ljava.lang.Class;">getNestMembers()</method><method type="boolean">isSealed()</method><method type="int">getClassFileVersion()</method><method type="[Ljava.lang.Class;">lambda$getPermittedSubclasses$2()</method><method type="boolean">lambda$getPermittedSubclasses$1()</method><method type="java.lang.String">lambda$methodToString$0()</method></class></package><package id="java.util"><interface id="java.util.List" scope="1"><name>List</name><method type="boolean">remove()</method><method type="java.lang.Object">remove()</method><method type="int">size()</method><method type="java.lang.Object">get()</method><method type="boolean">equals()</method><method type="int">hashCode()</method><method type="java.util.List">copyOf()</method><method type="int">indexOf()</method><method type="void">clear()</method><method type="int">lastIndexOf()</method><method type="boolean">isEmpty()</method><method type="void">replaceAll()</method><method type="boolean">add()</method><method type="void">add()</method><method type="java.util.List">subList()</method><method type="[Ljava.lang.Object;">toArray()</method><method type="[Ljava.lang.Object;">toArray()</method><method type="java.util.Iterator">iterator()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="boolean">contains()</method><method type="java.util.Spliterator">spliterator()</method><method type="boolean">addAll()</method><method type="boolean">addAll()</method><method type="java.lang.Object">set()</method><method type="void">sort()</method><method type="java.lang.Object">getFirst()</method><method type="java.lang.Object">getLast()</method><method type="void">addFirst()</method><method type="void">addLast()</method><method type="java.lang.Object">removeFirst()</method><method type="java.lang.Object">removeLast()</method><method type="boolean">removeAll()</method><method type="boolean">retainAll()</method><method type="java.util.ListIterator">listIterator()</method><method type="java.util.ListIterator">listIterator()</method><method type="java.util.SequencedCollection">reversed()</method><method type="java.util.List">reversed()</method><method type="boolean">containsAll()</method></interface></package><package id="org.mql.java.parser"><class id="[Lorg.mql.java.parser.XMLNode;" scope="1"><name>XMLNode[]</name></class></package><package id="org.w3c.dom"><interface id="org.w3c.dom.Node" scope="1"><name>Node</name><field type="short">ELEMENT_NODE</field><field type="short">ATTRIBUTE_NODE</field><field type="short">TEXT_NODE</field><field type="short">CDATA_SECTION_NODE</field><field type="short">ENTITY_REFERENCE_NODE</field><field type="short">ENTITY_NODE</field><field type="short">PROCESSING_INSTRUCTION_NODE</field><field type="short">COMMENT_NODE</field><field type="short">DOCUMENT_NODE</field><field type="short">DOCUMENT_TYPE_NODE</field><field type="short">DOCUMENT_FRAGMENT_NODE</field><field type="short">NOTATION_NODE</field><field type="short">DOCUMENT_POSITION_DISCONNECTED</field><field type="short">DOCUMENT_POSITION_PRECEDING</field><field type="short">DOCUMENT_POSITION_FOLLOWING</field><field type="short">DOCUMENT_POSITION_CONTAINS</field><field type="short">DOCUMENT_POSITION_CONTAINED_BY</field><field type="short">DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</field><method type="org.w3c.dom.Node">getFirstChild()</method><method type="short">getNodeType()</method><method type="java.lang.String">getNodeValue()</method><method type="org.w3c.dom.Node">removeChild()</method><method type="org.w3c.dom.Node">appendChild()</method><method type="org.w3c.dom.Node">getNextSibling()</method><method type="java.lang.String">getNodeName()</method><method type="org.w3c.dom.NodeList">getChildNodes()</method><method type="void">setTextContent()</method><method type="boolean">isSupported()</method><method type="org.w3c.dom.NamedNodeMap">getAttributes()</method><method type="void">normalize()</method><method type="void">setNodeValue()</method><method type="org.w3c.dom.Node">getParentNode()</method><method type="org.w3c.dom.Node">getLastChild()</method><method type="org.w3c.dom.Node">getPreviousSibling()</method><method type="org.w3c.dom.Document">getOwnerDocument()</method><method type="org.w3c.dom.Node">insertBefore()</method><method type="org.w3c.dom.Node">replaceChild()</method><method type="boolean">hasChildNodes()</method><method type="org.w3c.dom.Node">cloneNode()</method><method type="java.lang.String">getNamespaceURI()</method><method type="java.lang.String">getPrefix()</method><method type="void">setPrefix()</method><method type="java.lang.String">getLocalName()</method><method type="boolean">hasAttributes()</method><method type="java.lang.String">getBaseURI()</method><method type="short">compareDocumentPosition()</method><method type="java.lang.String">getTextContent()</method><method type="boolean">isSameNode()</method><method type="java.lang.String">lookupPrefix()</method><method type="boolean">isDefaultNamespace()</method><method type="java.lang.String">lookupNamespaceURI()</method><method type="boolean">isEqualNode()</method><method type="java.lang.Object">getFeature()</method><method type="java.lang.Object">setUserData()</method><method type="java.lang.Object">getUserData()</method></interface><interface id="org.w3c.dom.Document" scope="1"><name>Document</name><method type="org.w3c.dom.Element">createElement()</method><method type="org.w3c.dom.NodeList">getElementsByTagName()</method><method type="org.w3c.dom.DocumentType">getDoctype()</method><method type="org.w3c.dom.DOMImplementation">getImplementation()</method><method type="org.w3c.dom.Element">getDocumentElement()</method><method type="org.w3c.dom.DocumentFragment">createDocumentFragment()</method><method type="org.w3c.dom.Text">createTextNode()</method><method type="org.w3c.dom.Comment">createComment()</method><method type="org.w3c.dom.CDATASection">createCDATASection()</method><method type="org.w3c.dom.ProcessingInstruction">createProcessingInstruction()</method><method type="org.w3c.dom.Attr">createAttribute()</method><method type="org.w3c.dom.EntityReference">createEntityReference()</method><method type="org.w3c.dom.Node">importNode()</method><method type="org.w3c.dom.Element">createElementNS()</method><method type="org.w3c.dom.Attr">createAttributeNS()</method><method type="org.w3c.dom.NodeList">getElementsByTagNameNS()</method><method type="org.w3c.dom.Element">getElementById()</method><method type="java.lang.String">getInputEncoding()</method><method type="java.lang.String">getXmlEncoding()</method><method type="boolean">getXmlStandalone()</method><method type="void">setXmlStandalone()</method><method type="java.lang.String">getXmlVersion()</method><method type="void">setXmlVersion()</method><method type="boolean">getStrictErrorChecking()</method><method type="void">setStrictErrorChecking()</method><method type="java.lang.String">getDocumentURI()</method><method type="void">setDocumentURI()</method><method type="org.w3c.dom.Node">adoptNode()</method><method type="org.w3c.dom.DOMConfiguration">getDomConfig()</method><method type="void">normalizeDocument()</method><method type="org.w3c.dom.Node">renameNode()</method></interface></package><package id="javax.swing.filechooser"><class id="javax.swing.filechooser.FileFilter" scope="1"><name>FileFilter</name><method type="java.lang.String">getDescription()</method><method type="boolean">accept()</method></class></package><package id="org.mql.java.ui.panels"><class id="org.mql.java.ui.panels.FormPanel" scope="1"><name>FormPanel</name><field type="long">serialVersionUID</field><field type="javax.swing.JButton">generate</field><field type="javax.swing.JButton">choose</field><field type="javax.swing.JLabel">label</field><field type="org.mql.java.ui.componants.LabeledTextField">labeledTextField</field><method type="void">actionPerformed()</method><method type="org.mql.java.models.Project">getProject()</method></class></package><package id="java.awt.event"><interface id="java.awt.event.ActionListener" scope="1"><name>ActionListener</name><method type="void">actionPerformed()</method></interface></package><package id="javax.swing"><class id="javax.swing.JPanel" scope="1"><name>JPanel</name><field type="java.lang.String">uiClassID</field><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="void">updateUI()</method><method type="javax.swing.plaf.PanelUI">getUI()</method><method type="javax.swing.plaf.ComponentUI">getUI()</method><method type="void">setUI()</method><method type="java.lang.String">getUIClassID()</method><method type="void">writeObject()</method><method type="java.lang.String">paramString()</method></class><class id="javax.swing.JLabel" scope="1"><name>JLabel</name><field type="java.lang.String">uiClassID</field><field type="int">mnemonic</field><field type="int">mnemonicIndex</field><field type="java.lang.String">text</field><field type="javax.swing.Icon">defaultIcon</field><field type="javax.swing.Icon">disabledIcon</field><field type="boolean">disabledIconSet</field><field type="int">verticalAlignment</field><field type="int">horizontalAlignment</field><field type="int">verticalTextPosition</field><field type="int">horizontalTextPosition</field><field type="int">iconTextGap</field><field type="java.awt.Component">labelFor</field><field type="java.lang.String">LABELED_BY_PROPERTY</field><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="boolean">imageUpdate()</method><method type="void">updateUI()</method><method type="javax.swing.plaf.LabelUI">getUI()</method><method type="javax.swing.plaf.ComponentUI">getUI()</method><method type="void">setUI()</method><method type="java.lang.String">getUIClassID()</method><method type="javax.accessibility.AccessibleContext">access$000()</method><method type="int">checkVerticalKey()</method><method type="int">checkHorizontalKey()</method><method type="void">setDisplayedMnemonicIndex()</method><method type="void">setIcon()</method><method type="void">setDisabledIcon()</method><method type="void">setIconTextGap()</method><method type="int">getVerticalAlignment()</method><method type="void">setVerticalAlignment()</method><method type="int">getHorizontalAlignment()</method><method type="void">setHorizontalAlignment()</method><method type="int">getVerticalTextPosition()</method><method type="void">setVerticalTextPosition()</method><method type="int">getHorizontalTextPosition()</method><method type="void">setHorizontalTextPosition()</method><method type="int">getIconTextGap()</method><method type="int">getDisplayedMnemonicIndex()</method><method type="int">getDisplayedMnemonic()</method><method type="void">setDisplayedMnemonic()</method><method type="void">setDisplayedMnemonic()</method><method type="java.awt.Component">getLabelFor()</method><method type="void">setLabelFor()</method><method type="javax.swing.Icon">getDisabledIcon()</method><method type="javax.swing.Icon">getIcon()</method><method type="void">writeObject()</method><method type="java.lang.String">paramString()</method><method type="java.lang.String">getText()</method><method type="void">setText()</method></class><class id="javax.swing.JTextField" scope="1"><name>JTextField</name><field type="javax.swing.Action">action</field><field type="java.beans.PropertyChangeListener">actionPropertyChangeListener</field><field type="java.lang.String">notifyAction</field><field type="javax.swing.BoundedRangeModel">visibility</field><field type="int">horizontalAlignment</field><field type="int">columns</field><field type="int">columnWidth</field><field type="java.lang.String">command</field><field type="[Ljavax.swing.Action;">defaultActions</field><field type="java.lang.String">uiClassID</field><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="java.awt.Dimension">getPreferredSize()</method><method type="boolean">isValidateRoot()</method><method type="void">setFont()</method><method type="java.lang.String">getUIClassID()</method><method type="void">scrollRectToVisible()</method><method type="void">setAction()</method><method type="javax.swing.Action">getAction()</method><method type="void">setActionCommand()</method><method type="void">removeActionListener()</method><method type="void">configurePropertiesFromAction()</method><method type="boolean">isListener()</method><method type="java.beans.PropertyChangeListener">createActionPropertyChangeListener()</method><method type="void">setActionCommandFromAction()</method><method type="void">addActionListener()</method><method type="int">getHorizontalAlignment()</method><method type="void">setHorizontalAlignment()</method><method type="void">actionPropertyChanged()</method><method type="[Ljava.awt.event.ActionListener;">getActionListeners()</method><method type="void">fireActionPerformed()</method><method type="javax.swing.text.Document">createDefaultModel()</method><method type="void">setDocument()</method><method type="int">getColumnWidth()</method><method type="int">getColumns()</method><method type="void">setColumns()</method><method type="void">postActionEvent()</method><method type="javax.swing.BoundedRangeModel">getHorizontalVisibility()</method><method type="int">getScrollOffset()</method><method type="void">setScrollOffset()</method><method type="boolean">hasActionListener()</method><method type="void">writeObject()</method><method type="[Ljavax.swing.Action;">getActions()</method><method type="java.lang.String">paramString()</method></class><class id="javax.swing.JDialog" scope="1"><name>JDialog</name><field type="java.lang.Object">defaultLookAndFeelDecoratedKey</field><field type="int">defaultCloseOperation</field><field type="javax.swing.JRootPane">rootPane</field><field type="boolean">rootPaneCheckingEnabled</field><field type="javax.swing.TransferHandler">transferHandler</field><field type="javax.accessibility.AccessibleContext">accessibleContext</field><method type="javax.swing.JRootPane">createRootPane()</method><method type="void">setRootPane()</method><method type="void">setRootPaneCheckingEnabled()</method><method type="boolean">isDefaultLookAndFeelDecorated()</method><method type="javax.swing.JRootPane">getRootPane()</method><method type="void">processWindowEvent()</method><method type="void">setJMenuBar()</method><method type="javax.swing.JMenuBar">getJMenuBar()</method><method type="boolean">isRootPaneCheckingEnabled()</method><method type="java.awt.Container">getContentPane()</method><method type="void">addImpl()</method><method type="void">setLayout()</method><method type="javax.swing.JLayeredPane">getLayeredPane()</method><method type="void">setLayeredPane()</method><method type="java.awt.Component">getGlassPane()</method><method type="void">setGlassPane()</method><method type="java.awt.Graphics">getGraphics()</method><method type="void">repaint()</method><method type="int">getDefaultCloseOperation()</method><method type="void">setTransferHandler()</method><method type="javax.swing.TransferHandler">getTransferHandler()</method><method type="void">setDefaultLookAndFeelDecorated()</method><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="void">setDefaultCloseOperation()</method><method type="void">setContentPane()</method><method type="void">remove()</method><method type="void">update()</method><method type="java.lang.String">paramString()</method><method type="void">dialogInit()</method></class><class id="javax.swing.JTabbedPane" scope="1"><name>JTabbedPane</name><field type="int">WRAP_TAB_LAYOUT</field><field type="int">SCROLL_TAB_LAYOUT</field><field type="java.lang.String">uiClassID</field><field type="int">tabPlacement</field><field type="int">tabLayoutPolicy</field><field type="javax.swing.SingleSelectionModel">model</field><field type="boolean">haveRegistered</field><field type="javax.swing.event.ChangeListener">changeListener</field><field type="java.util.List">pages</field><field type="java.awt.Component">visComp</field><field type="javax.swing.event.ChangeEvent">changeEvent</field><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="java.awt.Component">getComponentAt()</method><method type="void">compWriteObjectNotify()</method><method type="void">updateUI()</method><method type="javax.swing.plaf.ComponentUI">getUI()</method><method type="javax.swing.plaf.TabbedPaneUI">getUI()</method><method type="void">setUI()</method><method type="java.lang.String">getUIClassID()</method><method type="java.lang.String">getToolTipText()</method><method type="javax.accessibility.AccessibleContext">access$000()</method><method type="void">access$100()</method><method type="void">setModel()</method><method type="void">removeChangeListener()</method><method type="javax.swing.event.ChangeListener">createChangeListener()</method><method type="void">addChangeListener()</method><method type="javax.swing.SingleSelectionModel">getModel()</method><method type="[Ljavax.swing.event.ChangeListener;">getChangeListeners()</method><method type="void">fireStateChanged()</method><method type="void">remove()</method><method type="void">remove()</method><method type="void">checkIndex()</method><method type="java.awt.Component">add()</method><method type="java.awt.Component">add()</method><method type="java.awt.Component">add()</method><method type="void">add()</method><method type="void">add()</method><method type="void">readObject()</method><method type="void">writeObject()</method><method type="java.lang.String">paramString()</method><method type="void">removeAll()</method><method type="void">addTab()</method><method type="void">addTab()</method><method type="void">addTab()</method><method type="void">setTabPlacement()</method><method type="void">setTabLayoutPolicy()</method><method type="int">getTabCount()</method><method type="void">setDisabledIconAt()</method><method type="int">getSelectedIndex()</method><method type="void">checkTabPlacement()</method><method type="void">checkTabLayoutPolicy()</method><method type="void">setSelectedIndexImpl()</method><method type="void">setSelectedIndex()</method><method type="void">changeAccessibleSelection()</method><method type="int">indexOfComponent()</method><method type="void">removeTabAt()</method><method type="void">insertTab()</method><method type="void">setTabComponentAt()</method><method type="void">clearAccessibleParent()</method><method type="java.awt.Component">getSelectedComponent()</method><method type="int">getTabRunCount()</method><method type="boolean">isEnabledAt()</method><method type="java.awt.Rectangle">getBoundsAt()</method><method type="java.lang.String">getTitleAt()</method><method type="javax.swing.Icon">getIconAt()</method><method type="java.awt.Component">getTabComponentAt()</method><method type="int">indexOfTabComponent()</method><method type="int">getTabPlacement()</method><method type="int">getTabLayoutPolicy()</method><method type="void">setSelectedComponent()</method><method type="javax.swing.Icon">getDisabledIconAt()</method><method type="java.lang.String">getToolTipTextAt()</method><method type="java.awt.Color">getBackgroundAt()</method><method type="java.awt.Color">getForegroundAt()</method><method type="int">getMnemonicAt()</method><method type="int">getDisplayedMnemonicIndexAt()</method><method type="void">setTitleAt()</method><method type="void">setIconAt()</method><method type="void">setToolTipTextAt()</method><method type="void">setBackgroundAt()</method><method type="void">setForegroundAt()</method><method type="void">setEnabledAt()</method><method type="void">setComponentAt()</method><method type="void">setDisplayedMnemonicIndexAt()</method><method type="void">setMnemonicAt()</method><method type="int">indexOfTab()</method><method type="int">indexOfTab()</method><method type="int">indexAtLocation()</method></class><class id="javax.swing.JButton" scope="1"><name>JButton</name><field type="java.lang.String">uiClassID</field><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="void">removeNotify()</method><method type="void">updateUI()</method><method type="java.lang.String">getUIClassID()</method><method type="boolean">isDefaultButton()</method><method type="boolean">isDefaultCapable()</method><method type="void">setDefaultCapable()</method><method type="void">writeObject()</method><method type="java.lang.String">paramString()</method></class><class id="javax.swing.JFrame" scope="1"><name>JFrame</name><field type="java.lang.Object">defaultLookAndFeelDecoratedKey</field><field type="int">defaultCloseOperation</field><field type="javax.swing.TransferHandler">transferHandler</field><field type="javax.swing.JRootPane">rootPane</field><field type="boolean">rootPaneCheckingEnabled</field><field type="javax.accessibility.AccessibleContext">accessibleContext</field><method type="void">frameInit()</method><method type="javax.swing.JRootPane">createRootPane()</method><method type="void">setRootPane()</method><method type="void">setRootPaneCheckingEnabled()</method><method type="boolean">isDefaultLookAndFeelDecorated()</method><method type="javax.swing.JRootPane">getRootPane()</method><method type="void">processWindowEvent()</method><method type="void">setJMenuBar()</method><method type="javax.swing.JMenuBar">getJMenuBar()</method><method type="boolean">isRootPaneCheckingEnabled()</method><method type="java.awt.Container">getContentPane()</method><method type="void">addImpl()</method><method type="void">setLayout()</method><method type="void">setIconImage()</method><method type="javax.swing.JLayeredPane">getLayeredPane()</method><method type="void">setLayeredPane()</method><method type="java.awt.Component">getGlassPane()</method><method type="void">setGlassPane()</method><method type="java.awt.Graphics">getGraphics()</method><method type="void">repaint()</method><method type="int">getDefaultCloseOperation()</method><method type="void">setTransferHandler()</method><method type="javax.swing.TransferHandler">getTransferHandler()</method><method type="void">setDefaultLookAndFeelDecorated()</method><method type="javax.accessibility.AccessibleContext">getAccessibleContext()</method><method type="void">setDefaultCloseOperation()</method><method type="void">setContentPane()</method><method type="void">remove()</method><method type="void">update()</method><method type="java.lang.String">paramString()</method></class></package><association type="extends"><start>org.mql.java.Main</start><end>javax.swing.JFrame</end></association><association type="extends"><start>org.mql.java.models.Association</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.models.Association</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Association</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Association</start><end>java.lang.String</end></association><association type="extends"><start>org.mql.java.models.Entity</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>java.lang.Class</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>org.mql.java.models.Entity</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>java.util.List</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>java.util.List</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>java.util.List</end></association><association type="aggregation"><start>org.mql.java.models.Entity</start><end>java.lang.String</end></association><association type="extends"><start>org.mql.java.models.Package</start><end>java.lang.Object</end></association><association type="implements"><start>org.mql.java.models.Package</start><end>org.mql.java.models.Container</end></association><association type="aggregation"><start>org.mql.java.models.Package</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Package</start><end>java.util.List</end></association><association type="aggregation"><start>org.mql.java.models.Package</start><end>java.util.List</end></association><association type="extends"><start>org.mql.java.models.Project</start><end>java.lang.Object</end></association><association type="implements"><start>org.mql.java.models.Project</start><end>org.mql.java.models.Container</end></association><association type="aggregation"><start>org.mql.java.models.Project</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.models.Project</start><end>java.util.List</end></association><association type="aggregation"><start>org.mql.java.models.Project</start><end>java.util.List</end></association><association type="extends"><start>org.mql.java.parser.XMLNode</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.parser.XMLNode</start><end>org.w3c.dom.Node</end></association><association type="aggregation"><start>org.mql.java.parser.XMLNode</start><end>[Lorg.mql.java.parser.XMLNode;</end></association><association type="aggregation"><start>org.mql.java.parser.XMLNode</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.parser.XMLNode</start><end>org.w3c.dom.Document</end></association><association type="aggregation"><start>org.mql.java.parser.XMLNode</start><end>org.mql.java.parser.XMLNode</end></association><association type="extends"><start>org.mql.java.persistance.ProjectLoader</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.persistance.ProjectLoader</start><end>org.mql.java.models.Project</end></association><association type="aggregation"><start>org.mql.java.persistance.ProjectLoader</start><end>org.mql.java.parser.XMLNode</end></association><association type="extends"><start>org.mql.java.persistance.ProjectWriter</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.persistance.ProjectWriter</start><end>org.mql.java.parser.XMLNode</end></association><association type="extends"><start>org.mql.java.scanner.ProjectScanner</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.mql.java.scanner.ProjectScanner</start><end>java.lang.String</end></association><association type="aggregation"><start>org.mql.java.scanner.ProjectScanner</start><end>org.mql.java.models.Project</end></association><association type="extends"><start>org.mql.java.ui.componants.ClassComponant</start><end>javax.swing.JPanel</end></association><association type="aggregation"><start>org.mql.java.ui.componants.ClassComponant</start><end>org.mql.java.models.Entity</end></association><association type="extends"><start>org.mql.java.ui.componants.LabeledTextField</start><end>javax.swing.JPanel</end></association><association type="aggregation"><start>org.mql.java.ui.componants.LabeledTextField</start><end>javax.swing.JLabel</end></association><association type="aggregation"><start>org.mql.java.ui.componants.LabeledTextField</start><end>javax.swing.JTextField</end></association><association type="aggregation"><start>org.mql.java.ui.componants.LabeledTextField</start><end>javax.swing.JPanel</end></association><association type="extends"><start>org.mql.java.ui.componants.PackageComponant</start><end>java.lang.Object</end></association><association type="extends"><start>org.mql.java.ui.dialogs.DiagramsDialog</start><end>javax.swing.JDialog</end></association><association type="extends"><start>org.mql.java.ui.dialogs.ErrorDialog</start><end>javax.swing.JDialog</end></association><association type="extends"><start>org.mql.java.ui.panels.ClassPanel</start><end>javax.swing.JPanel</end></association><association type="extends"><start>org.mql.java.ui.panels.DiagramsPanel</start><end>javax.swing.JTabbedPane</end></association><association type="extends"><start>org.mql.java.ui.panels.FormPanel$DirectoryFilter</start><end>javax.swing.filechooser.FileFilter</end></association><association type="aggregation"><start>org.mql.java.ui.panels.FormPanel$DirectoryFilter</start><end>org.mql.java.ui.panels.FormPanel</end></association><association type="extends"><start>org.mql.java.ui.panels.FormPanel</start><end>javax.swing.JPanel</end></association><association type="implements"><start>org.mql.java.ui.panels.FormPanel</start><end>java.awt.event.ActionListener</end></association><association type="aggregation"><start>org.mql.java.ui.panels.FormPanel</start><end>javax.swing.JButton</end></association><association type="aggregation"><start>org.mql.java.ui.panels.FormPanel</start><end>javax.swing.JButton</end></association><association type="aggregation"><start>org.mql.java.ui.panels.FormPanel</start><end>javax.swing.JLabel</end></association><association type="aggregation"><start>org.mql.java.ui.panels.FormPanel</start><end>org.mql.java.ui.componants.LabeledTextField</end></association><association type="extends"><start>org.mql.java.ui.panels.PackagePanel</start><end>javax.swing.JPanel</end></association><association type="extends"><start>org.mql.java.util.SourceClassLoader</start><end>java.lang.Object</end></association></project>
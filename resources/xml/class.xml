<?xml version="1.0" encoding="UTF-8" standalone="no"?><project path="C:\Users\hp\Documents\MQL\S1\Java\ElGhayate Marouane - UML Diagrams Generator"><class id="java.lang.Object"><name>Object</name><method type="void">finalize()</method><method type="void">wait0()</method><method type="boolean">equals()</method><method type="java.lang.String">toString()</method><method type="int">hashCode()</method><method type="java.lang.Class">getClass()</method><method type="java.lang.Object">clone()</method><method type="void">notify()</method><method type="void">notifyAll()</method><method type="void">wait()</method><method type="void">wait()</method><method type="void">wait()</method></class><class id="org.mql.java.parser.XMLNode"><name>XMLNode</name><field type="org.w3c.dom.Node">node</field><field type="[Lorg.mql.java.parser.XMLNode;">children</field><field type="org.w3c.dom.Document">document</field><field type="org.mql.java.parser.XMLNode">instance</field><field type="java.lang.String">source</field><method type="java.lang.String">getName()</method><method type="java.lang.String">getValue()</method><method type="boolean">isNamed()</method><method type="org.mql.java.parser.XMLNode">getInstance()</method><method type="void">save()</method><method type="void">setValue()</method><method type="org.w3c.dom.Node">getNode()</method><method type="void">setAttribute()</method><method type="java.lang.String">getAttribute()</method><method type="void">setNode()</method><method type="org.mql.java.parser.XMLNode">getChild()</method><method type="[Lorg.mql.java.parser.XMLNode;">getChildren()</method><method type="void">createRootElement()</method><method type="void">extractChildren()</method><method type="void">appendChild()</method><method type="org.mql.java.parser.XMLNode">getElementById()</method><method type="int">getIntAttribute()</method><method type="void">removeChild()</method><method type="org.mql.java.parser.XMLNode">getNewDeaultInstance()</method><method type="org.mql.java.parser.XMLNode">createNode()</method><method type="void">setSource()</method><method type="[Lorg.mql.java.parser.XMLNode;">getNodes()</method></class><class id="org.mql.java.models.Project"><name>Project</name><field type="java.lang.String">projectPath</field><field type="java.util.List">packages</field><field type="java.util.List">associations</field><method type="java.lang.String">toString()</method><method type="java.util.List">getPackages()</method><method type="void">print()</method><method type="void">addPackage()</method><method type="java.lang.String">getProjectPath()</method><method type="java.util.List">getAssociations()</method><method type="void">addAssociation()</method></class><class id="java.lang.String"><name>String</name><field type="[B">value</field><field type="byte">coder</field><field type="int">hash</field><field type="boolean">hashIsZero</field><field type="long">serialVersionUID</field><field type="boolean">COMPACT_STRINGS</field><field type="[Ljava.io.ObjectStreamField;">serialPersistentFields</field><field type="char">REPL</field><field type="java.util.Comparator">CASE_INSENSITIVE_ORDER</field><field type="byte">LATIN1</field><field type="byte">UTF16</field><method type="[B">value()</method><method type="boolean">equals()</method><method type="int">length()</method><method type="java.lang.String">toString()</method><method type="void">checkIndex()</method><method type="int">hashCode()</method><method type="void">getChars()</method><method type="int">compareTo()</method><method type="int">compareTo()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="int">indexOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="java.lang.String">valueOf()</method><method type="byte">coder()</method><method type="java.lang.Void">rangeCheck()</method><method type="int">checkBoundsOffCount()</method><method type="java.nio.charset.Charset">lookupCharset()</method><method type="char">decode2()</method><method type="int">decodeUTF8_UTF16()</method><method type="int">scale()</method><method type="int">decodeWithDecoder()</method><method type="java.lang.String">newStringNoRepl1()</method><method type="java.lang.String">newStringUTF8NoRepl()</method><method type="void">throwMalformed()</method><method type="void">throwMalformed()</method><method type="[B">encodeUTF8()</method><method type="[B">encode8859_1()</method><method type="[B">encode8859_1()</method><method type="[B">encodeASCII()</method><method type="[B">encodeWithEncoder()</method><method type="[B">safeTrim()</method><method type="[B">encode()</method><method type="[B">getBytesNoRepl1()</method><method type="boolean">isASCII()</method><method type="void">throwUnmappable()</method><method type="void">throwUnmappable()</method><method type="void">replaceNegatives()</method><method type="boolean">isNotContinuation()</method><method type="boolean">isMalformed3()</method><method type="int">malformed3()</method><method type="char">decode3()</method><method type="boolean">isMalformed3_2()</method><method type="int">decode4()</method><method type="boolean">isMalformed4()</method><method type="int">malformed4()</method><method type="boolean">isMalformed4_2()</method><method type="boolean">isMalformed4_3()</method><method type="[B">encodeUTF8_UTF16()</method><method type="boolean">isLatin1()</method><method type="char">charAt()</method><method type="int">codePointAt()</method><method type="int">codePointBefore()</method><method type="int">codePointCount()</method><method type="int">offsetByCodePoints()</method><method type="void">checkBoundsBeginEnd()</method><method type="[B">getBytes()</method><method type="void">getBytes()</method><method type="void">getBytes()</method><method type="void">getBytes()</method><method type="[B">getBytes()</method><method type="[B">getBytes()</method><method type="boolean">contentEquals()</method><method type="boolean">contentEquals()</method><method type="boolean">nonSyncContentEquals()</method><method type="boolean">regionMatches()</method><method type="boolean">regionMatches()</method><method type="boolean">startsWith()</method><method type="boolean">startsWith()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="int">lastIndexOf()</method><method type="java.lang.String">substring()</method><method type="java.lang.String">substring()</method><method type="boolean">isEmpty()</method><method type="java.lang.String">replace()</method><method type="java.lang.String">replace()</method><method type="boolean">matches()</method><method type="java.lang.String">replaceFirst()</method><method type="java.lang.String">replaceAll()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">split()</method><method type="[Ljava.lang.String;">splitWithDelimiters()</method><method type="java.lang.String">join()</method><method type="java.lang.String">join()</method><method type="java.lang.String">join()</method><method type="java.lang.String">toLowerCase()</method><method type="java.lang.String">toLowerCase()</method><method type="java.lang.String">toUpperCase()</method><method type="java.lang.String">toUpperCase()</method><method type="java.lang.String">trim()</method><method type="java.lang.String">strip()</method><method type="java.lang.String">stripLeading()</method><method type="java.lang.String">stripTrailing()</method><method type="int">indexOfNonWhitespace()</method><method type="java.util.stream.Stream">lines()</method><method type="java.lang.String">repeat()</method><method type="int">lastIndexOfNonWhitespace()</method><method type="int">outdent()</method><method type="boolean">isBlank()</method><method type="[C">toCharArray()</method><method type="java.lang.String">format()</method><method type="java.lang.String">format()</method><method type="void">repeatCopyRest()</method><method type="java.lang.Object">resolveConstantDesc()</method><method type="java.lang.String">resolveConstantDesc()</method><method type="java.util.stream.IntStream">codePoints()</method><method type="java.lang.String">newStringNoRepl()</method><method type="[B">getBytesUTF8NoRepl()</method><method type="[B">getBytesNoRepl()</method><method type="int">decodeASCII()</method><method type="boolean">equalsIgnoreCase()</method><method type="int">compareToIgnoreCase()</method><method type="boolean">endsWith()</method><method type="java.lang.CharSequence">subSequence()</method><method type="java.lang.String">concat()</method><method type="boolean">contains()</method><method type="java.lang.String">indent()</method><method type="java.lang.String">stripIndent()</method><method type="java.lang.String">translateEscapes()</method><method type="java.util.stream.IntStream">chars()</method><method type="java.lang.Object">transform()</method><method type="java.lang.String">formatted()</method><method type="java.lang.String">copyValueOf()</method><method type="java.lang.String">copyValueOf()</method><method type="java.lang.String">intern()</method><method type="void">checkOffset()</method><method type="java.lang.String">valueOfCodePoint()</method><method type="java.util.Optional">describeConstable()</method><method type="java.lang.String">lambda$stripIndent$3()</method><method type="java.lang.String">lambda$indent$2()</method><method type="java.lang.String">lambda$indent$1()</method><method type="java.lang.String">lambda$indent$0()</method></class><interface id="org.mql.java.generators.Generator"><name>Generator</name><method type="void">generate()</method></interface><class id="org.mql.java.generators.ClassGenerator"><name>ClassGenerator</name><field type="org.mql.java.parser.XMLNode">root</field><field type="org.mql.java.models.Project">project</field><field type="java.lang.String">target</field><method type="void">generate()</method><method type="org.mql.java.parser.XMLNode">getAssociationNode()</method><method type="void">discoverClasses()</method><method type="void">appendClassNode()</method></class><class id="org.mql.java.generators.PackageGenerator"><name>PackageGenerator</name><field type="org.mql.java.models.Project">project</field><field type="java.lang.String">target</field><field type="org.mql.java.parser.XMLNode">root</field><method type="void">generate()</method><method type="void">transformClass()</method><method type="void">transformPackage()</method></class><class id="org.mql.java.models.Association"><name>Association</name><field type="java.lang.String">type</field><field type="java.lang.String">start</field><field type="java.lang.String">end</field><method type="java.lang.String">getType()</method><method type="void">setStart()</method><method type="java.lang.String">getEnd()</method><method type="void">setEnd()</method><method type="void">setType()</method><method type="java.lang.String">getStart()</method></class><class id="java.lang.Class"><name>Class</name><field type="int">ANNOTATION</field><field type="int">ENUM</field><field type="int">SYNTHETIC</field><field type="java.lang.reflect.Constructor">cachedConstructor</field><field type="java.lang.String">name</field><field type="java.lang.Module">module</field><field type="java.lang.String">packageName</field><field type="java.lang.Class">componentType</field><field type="java.security.ProtectionDomain">allPermDomain</field><field type="java.lang.ref.SoftReference">reflectionData</field><field type="int">classRedefinedCount</field><field type="sun.reflect.generics.repository.ClassRepository">genericInfo</field><field type="[Ljava.lang.Class;">EMPTY_CLASS_ARRAY</field><field type="long">serialVersionUID</field><field type="[Ljava.io.ObjectStreamField;">serialPersistentFields</field><field type="jdk.internal.reflect.ReflectionFactory">reflectionFactory</field><field type="[Ljava.lang.Object;">enumConstants</field><field type="java.util.Map">enumConstantDirectory</field><field type="java.lang.Class$AnnotationData">annotationData</field><field type="sun.reflect.annotation.AnnotationType">annotationType</field><field type="java.lang.ClassValue$ClassValueMap">classValueMap</field><method type="java.lang.String">getName()</method><method type="void">checkPackageAccess()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName()</method><method type="java.lang.Class">forName0()</method><method type="java.lang.String">toString()</method><method type="java.lang.Module">getModule()</method><method type="java.security.ProtectionDomain">getProtectionDomain()</method><method type="boolean">isAssignableFrom()</method><method type="boolean">isInstance()</method><method type="int">getModifiers()</method><method type="boolean">isInterface()</method><method type="boolean">isArray()</method><method type="boolean">isPrimitive()</method><method type="boolean">isHidden()</method><method type="java.lang.Class">getSuperclass()</method><method type="java.lang.Object">cast()</method><method type="java.lang.invoke.TypeDescriptor$OfField">componentType()</method><method type="java.lang.Class">componentType()</method><method type="java.lang.ClassLoader">getClassLoader0()</method><method type="java.util.Optional">describeConstable()</method><method type="java.lang.Class">getComponentType()</method><method type="boolean">isAnnotation()</method><method type="boolean">isEnum()</method><method type="boolean">isRecord()</method><method type="[Ljava.lang.reflect.TypeVariable;">getTypeParameters()</method><method type="java.lang.ClassLoader">getClassLoader()</method><method type="void">checkMemberAccess()</method><method type="jdk.internal.reflect.ReflectionFactory">getReflectionFactory()</method><method type="java.lang.reflect.Constructor">getConstructor0()</method><method type="java.lang.Object">newInstance()</method><method type="java.lang.String">initClassName()</method><method type="sun.reflect.generics.repository.ClassRepository">getGenericInfo()</method><method type="java.lang.Class">elementType()</method><method type="[Ljava.lang.Class;">getInterfaces()</method><method type="[Ljava.lang.Class;">getInterfaces()</method><method type="java.lang.Class$ReflectionData">reflectionData()</method><method type="[Ljava.lang.Class;">getInterfaces0()</method><method type="boolean">isMemberClass()</method><method type="boolean">isLocalClass()</method><method type="boolean">isAnonymousClass()</method><method type="int">getClassAccessFlagsRaw()</method><method type="java.lang.Class$EnclosingMethodInfo">getEnclosingMethodInfo()</method><method type="sun.reflect.generics.factory.GenericsFactory">getFactory()</method><method type="java.lang.Class">toClass()</method><method type="java.lang.Class">getEnclosingClass()</method><method type="[Ljava.lang.reflect.Method;">privateGetDeclaredMethods()</method><method type="boolean">arrayContentsEq()</method><method type="[Ljava.lang.Object;">getEnclosingMethod0()</method><method type="[Ljava.lang.reflect.Constructor;">privateGetDeclaredConstructors()</method><method type="java.lang.Class">getDeclaringClass0()</method><method type="boolean">isUnnamedClass()</method><method type="java.lang.String">getSimpleName0()</method><method type="java.lang.String">getSimpleName()</method><method type="java.lang.String">getSimpleBinaryName()</method><method type="java.lang.String">getCanonicalName0()</method><method type="java.lang.String">getCanonicalName()</method><method type="boolean">isLocalOrAnonymousClass()</method><method type="boolean">isSynthetic()</method><method type="boolean">isTopLevelClass()</method><method type="java.lang.String">getSimpleBinaryName0()</method><method type="boolean">hasEnclosingMethodInfo()</method><method type="[Ljava.lang.reflect.Field;">privateGetPublicFields()</method><method type="[Ljava.lang.reflect.Field;">copyFields()</method><method type="[Ljava.lang.reflect.Method;">privateGetPublicMethods()</method><method type="[Ljava.lang.reflect.Method;">copyMethods()</method><method type="[Ljava.lang.reflect.Constructor;">copyConstructors()</method><method type="java.lang.reflect.Field">getField0()</method><method type="java.lang.reflect.Method">getMethod0()</method><method type="java.lang.String">methodToString()</method><method type="[Ljava.lang.Class;">getDeclaredClasses0()</method><method type="[Ljava.lang.reflect.Field;">privateGetDeclaredFields()</method><method type="[Ljava.lang.reflect.RecordComponent;">getRecordComponents0()</method><method type="java.lang.reflect.Field">searchFields()</method><method type="java.lang.reflect.Method">searchMethods()</method><method type="java.lang.String">resolveName()</method><method type="boolean">isOpenToCaller()</method><method type="java.io.InputStream">getResourceAsStream()</method><method type="java.net.URL">getResource()</method><method type="java.security.ProtectionDomain">protectionDomain()</method><method type="java.security.ProtectionDomain">getProtectionDomain0()</method><method type="java.lang.String">getPackageName()</method><method type="java.lang.Class$ReflectionData">newReflectionData()</method><method type="java.lang.String">getGenericSignature0()</method><method type="[B">getExecutableTypeAnnotationBytes()</method><method type="[Ljava.lang.reflect.Field;">getDeclaredFields0()</method><method type="void">addAll()</method><method type="[Ljava.lang.reflect.Constructor;">getDeclaredConstructors0()</method><method type="[Ljava.lang.reflect.Method;">getDeclaredMethods0()</method><method type="java.lang.PublicMethods$MethodList">getMethodsRecursive()</method><method type="boolean">desiredAssertionStatus0()</method><method type="boolean">desiredAssertionStatus()</method><method type="boolean">isRecord0()</method><method type="[Ljava.lang.Object;">getEnumConstantsShared()</method><method type="java.lang.reflect.Method">getMethod()</method><method type="java.util.Map">enumConstantDirectory()</method><method type="java.lang.String">cannotCastMsg()</method><method type="java.lang.Class$AnnotationData">annotationData()</method><method type="boolean">isAnnotationPresent()</method><method type="java.lang.Class$AnnotationData">createAnnotationData()</method><method type="[B">getRawAnnotations()</method><method type="jdk.internal.reflect.ConstantPool">getConstantPool()</method><method type="boolean">casAnnotationType()</method><method type="[B">getRawTypeAnnotations()</method><method type="java.lang.Class">getNestHost0()</method><method type="java.lang.Class">getNestHost()</method><method type="[Ljava.lang.Class;">getNestMembers0()</method><method type="java.lang.String">descriptorString()</method><method type="[Ljava.lang.Class;">getPermittedSubclasses0()</method><method type="void">checkPackageAccessForPermittedSubclasses()</method><method type="[Ljava.lang.Class;">getPermittedSubclasses()</method><method type="int">getClassFileVersion0()</method><method type="int">getClassAccessFlagsRaw0()</method><method type="java.lang.Class">arrayType()</method><method type="java.lang.invoke.TypeDescriptor$OfField">arrayType()</method><method type="boolean">isDirectSubType()</method><method type="void">registerNatives()</method><method type="java.lang.String">toGenericString()</method><method type="java.lang.String">typeVarBounds()</method><method type="java.lang.Object">getClassData()</method><method type="java.lang.reflect.Type">getGenericSuperclass()</method><method type="java.lang.Package">getPackage()</method><method type="[Ljava.lang.reflect.Type;">getGenericInterfaces()</method><method type="java.util.Set">accessFlags()</method><method type="[Ljava.lang.Object;">getSigners()</method><method type="void">setSigners()</method><method type="java.lang.reflect.Method">getEnclosingMethod()</method><method type="java.lang.reflect.Constructor">getEnclosingConstructor()</method><method type="java.lang.Class">getDeclaringClass()</method><method type="java.lang.String">getTypeName()</method><method type="[Ljava.lang.Class;">getClasses()</method><method type="[Ljava.lang.reflect.Field;">getFields()</method><method type="[Ljava.lang.reflect.Method;">getMethods()</method><method type="[Ljava.lang.reflect.Constructor;">getConstructors()</method><method type="java.lang.reflect.Field">getField()</method><method type="java.lang.reflect.Constructor">getConstructor()</method><method type="[Ljava.lang.Class;">getDeclaredClasses()</method><method type="[Ljava.lang.reflect.Field;">getDeclaredFields()</method><method type="[Ljava.lang.reflect.RecordComponent;">getRecordComponents()</method><method type="[Ljava.lang.reflect.Method;">getDeclaredMethods()</method><method type="[Ljava.lang.reflect.Constructor;">getDeclaredConstructors()</method><method type="java.lang.reflect.Field">getDeclaredField()</method><method type="java.lang.reflect.Method">getDeclaredMethod()</method><method type="java.util.List">getDeclaredPublicMethods()</method><method type="java.lang.reflect.Constructor">getDeclaredConstructor()</method><method type="java.lang.Class">getPrimitiveClass()</method><method type="[Ljava.lang.Object;">getEnumConstants()</method><method type="java.lang.Class">asSubclass()</method><method type="java.lang.annotation.Annotation">getAnnotation()</method><method type="[Ljava.lang.annotation.Annotation;">getAnnotationsByType()</method><method type="[Ljava.lang.annotation.Annotation;">getAnnotations()</method><method type="java.lang.annotation.Annotation">getDeclaredAnnotation()</method><method type="[Ljava.lang.annotation.Annotation;">getDeclaredAnnotationsByType()</method><method type="[Ljava.lang.annotation.Annotation;">getDeclaredAnnotations()</method><method type="sun.reflect.annotation.AnnotationType">getAnnotationType()</method><method type="java.util.Map">getDeclaredAnnotationMap()</method><method type="java.lang.reflect.AnnotatedType">getAnnotatedSuperclass()</method><method type="[Ljava.lang.reflect.AnnotatedType;">getAnnotatedInterfaces()</method><method type="boolean">isNestmateOf()</method><method type="[Ljava.lang.Class;">getNestMembers()</method><method type="boolean">isSealed()</method><method type="int">getClassFileVersion()</method><method type="[Ljava.lang.Class;">lambda$getPermittedSubclasses$2()</method><method type="boolean">lambda$getPermittedSubclasses$1()</method><method type="java.lang.String">lambda$methodToString$0()</method></class><class id="org.mql.java.models.ClassWrapper"><name>ClassWrapper</name><field type="java.lang.Class">cls</field><field type="java.lang.String">name</field><field type="java.lang.String">fullName</field><field type="org.mql.java.models.ClassWrapper">superClass</field><field type="java.util.List">interfaces</field><field type="java.util.List">componants</field><field type="java.util.List">aggregates</field><field type="java.lang.String">type</field><method type="java.lang.String">getName()</method><method type="java.lang.String">toString()</method><method type="java.util.List">getInterfaces()</method><method type="[Ljava.lang.reflect.Field;">getFields()</method><method type="[Ljava.lang.reflect.Method;">getMethods()</method><method type="java.lang.String">getType()</method><method type="java.lang.String">getFullName()</method><method type="void">discover()</method><method type="org.mql.java.models.ClassWrapper">getSuperClass()</method><method type="java.util.List">getComponants()</method><method type="java.util.List">getAggregates()</method><method type="org.mql.java.models.ClassWrapper">lambda$3()</method><method type="boolean">lambda$2()</method><method type="org.mql.java.models.ClassWrapper">lambda$0()</method><method type="org.mql.java.models.ClassWrapper">lambda$1()</method></class><interface id="java.util.List"><name>List</name><method type="boolean">remove()</method><method type="java.lang.Object">remove()</method><method type="int">size()</method><method type="java.lang.Object">get()</method><method type="boolean">equals()</method><method type="int">hashCode()</method><method type="java.util.List">copyOf()</method><method type="int">indexOf()</method><method type="void">clear()</method><method type="int">lastIndexOf()</method><method type="boolean">isEmpty()</method><method type="void">replaceAll()</method><method type="boolean">add()</method><method type="void">add()</method><method type="java.util.List">subList()</method><method type="[Ljava.lang.Object;">toArray()</method><method type="[Ljava.lang.Object;">toArray()</method><method type="java.util.Iterator">iterator()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="java.util.List">of()</method><method type="boolean">contains()</method><method type="java.util.Spliterator">spliterator()</method><method type="boolean">addAll()</method><method type="boolean">addAll()</method><method type="java.lang.Object">set()</method><method type="void">sort()</method><method type="java.lang.Object">getFirst()</method><method type="java.lang.Object">getLast()</method><method type="void">addFirst()</method><method type="void">addLast()</method><method type="java.lang.Object">removeFirst()</method><method type="java.lang.Object">removeLast()</method><method type="boolean">removeAll()</method><method type="boolean">retainAll()</method><method type="java.util.ListIterator">listIterator()</method><method type="java.util.ListIterator">listIterator()</method><method type="java.util.SequencedCollection">reversed()</method><method type="java.util.List">reversed()</method><method type="boolean">containsAll()</method></interface><class id="org.mql.java.models.ClassWrapper"><name>ClassWrapper</name><field type="java.lang.Class">cls</field><field type="java.lang.String">name</field><field type="java.lang.String">fullName</field><field type="org.mql.java.models.ClassWrapper">superClass</field><field type="java.util.List">interfaces</field><field type="java.util.List">componants</field><field type="java.util.List">aggregates</field><field type="java.lang.String">type</field><method type="java.lang.String">getName()</method><method type="java.lang.String">toString()</method><method type="java.util.List">getInterfaces()</method><method type="[Ljava.lang.reflect.Field;">getFields()</method><method type="[Ljava.lang.reflect.Method;">getMethods()</method><method type="java.lang.String">getType()</method><method type="java.lang.String">getFullName()</method><method type="void">discover()</method><method type="org.mql.java.models.ClassWrapper">getSuperClass()</method><method type="java.util.List">getComponants()</method><method type="java.util.List">getAggregates()</method><method type="org.mql.java.models.ClassWrapper">lambda$3()</method><method type="boolean">lambda$2()</method><method type="org.mql.java.models.ClassWrapper">lambda$0()</method><method type="org.mql.java.models.ClassWrapper">lambda$1()</method></class><class id="org.mql.java.models.Package"><name>Package</name><field type="java.lang.String">name</field><field type="java.util.List">classes</field><field type="java.util.List">subPackages</field><method type="java.lang.String">getName()</method><method type="java.lang.String">toString()</method><method type="java.util.List">getClasses()</method><method type="void">addClass()</method><method type="void">setName()</method><method type="void">print()</method><method type="void">addPackage()</method><method type="java.util.List">getSubPackages()</method></class><class id="org.mql.java.scanner.ProjectScanner"><name>ProjectScanner</name><field type="java.lang.String">root</field><field type="org.mql.java.models.Project">project</field><method type="org.mql.java.models.Project">scan()</method><method type="void">extractAssociations()</method><method type="org.mql.java.models.Package">recursiveScan()</method></class><class id="org.mql.java.util.SourceClassLoader"><name>SourceClassLoader</name><method type="java.lang.Class">loadClass()</method></class><class id="org.mql.java.Main"><name>Main</name><method type="void">main()</method><method type="void">init()</method></class><association type="extends"><start>org.mql.java.generators.ClassGenerator</start><end>java.lang.Object</end></association><association type="implements"><start>org.mql.java.generators.ClassGenerator</start><end>org.mql.java.generators.Generator</end></association><association type="aggregation"><start>org.mql.java.parser.XMLNode</start><end>org.mql.java.generators.ClassGenerator</end></association><association type="aggregation"><start>org.mql.java.models.Project</start><end>org.mql.java.generators.ClassGenerator</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.generators.ClassGenerator</end></association><association type="extends"><start>org.mql.java.generators.PackageGenerator</start><end>java.lang.Object</end></association><association type="implements"><start>org.mql.java.generators.PackageGenerator</start><end>org.mql.java.generators.Generator</end></association><association type="aggregation"><start>org.mql.java.models.Project</start><end>org.mql.java.generators.PackageGenerator</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.generators.PackageGenerator</end></association><association type="aggregation"><start>org.mql.java.parser.XMLNode</start><end>org.mql.java.generators.PackageGenerator</end></association><association type="extends"><start>org.mql.java.Main</start><end>java.lang.Object</end></association><association type="extends"><start>org.mql.java.models.Association</start><end>java.lang.Object</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.models.Association</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.models.Association</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.models.Association</end></association><association type="extends"><start>org.mql.java.models.ClassWrapper</start><end>java.lang.Object</end></association><association type="aggregation"><start>java.lang.Class</start><end>org.mql.java.models.ClassWrapper</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.models.ClassWrapper</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.models.ClassWrapper</end></association><association type="aggregation"><start>org.mql.java.models.ClassWrapper</start><end>org.mql.java.models.ClassWrapper</end></association><association type="aggregation"><start>java.util.List</start><end>org.mql.java.models.ClassWrapper</end></association><association type="aggregation"><start>java.util.List</start><end>org.mql.java.models.ClassWrapper</end></association><association type="aggregation"><start>java.util.List</start><end>org.mql.java.models.ClassWrapper</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.models.ClassWrapper</end></association><association type="extends"><start>org.mql.java.models.Package</start><end>java.lang.Object</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.models.Package</end></association><association type="aggregation"><start>java.util.List</start><end>org.mql.java.models.Package</end></association><association type="aggregation"><start>java.util.List</start><end>org.mql.java.models.Package</end></association><association type="extends"><start>org.mql.java.models.Project</start><end>java.lang.Object</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.models.Project</end></association><association type="aggregation"><start>java.util.List</start><end>org.mql.java.models.Project</end></association><association type="aggregation"><start>java.util.List</start><end>org.mql.java.models.Project</end></association><association type="extends"><start>org.mql.java.parser.XMLNode</start><end>java.lang.Object</end></association><association type="aggregation"><start>org.w3c.dom.Node</start><end>org.mql.java.parser.XMLNode</end></association><association type="aggregation"><start>[Lorg.mql.java.parser.XMLNode;</start><end>org.mql.java.parser.XMLNode</end></association><association type="aggregation"><start>org.w3c.dom.Document</start><end>org.mql.java.parser.XMLNode</end></association><association type="aggregation"><start>org.mql.java.parser.XMLNode</start><end>org.mql.java.parser.XMLNode</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.parser.XMLNode</end></association><association type="extends"><start>org.mql.java.scanner.ProjectScanner</start><end>java.lang.Object</end></association><association type="aggregation"><start>java.lang.String</start><end>org.mql.java.scanner.ProjectScanner</end></association><association type="aggregation"><start>org.mql.java.models.Project</start><end>org.mql.java.scanner.ProjectScanner</end></association><association type="extends"><start>org.mql.java.util.SourceClassLoader</start><end>java.lang.Object</end></association></project>